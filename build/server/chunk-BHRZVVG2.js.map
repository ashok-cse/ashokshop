{
  "version": 3,
  "sources": ["../../.svelte-kit/adapter-node/chunks/api.js"],
  "sourcesContent": ["import { l as loadingDelayed } from \"./store.js\";\nimport { i as id } from \"./website.js\";\nlet typingTimer;\nconst send = async ({ method, path, params, data, token, headers }) => {\n  var _a, _b;\n  if (path.includes(\".png\") || path.includes(\".jpg\") || path.includes(\".svg\") || path.includes(\".json\") || path.includes(\".css\") || path.includes(\"undefined\"))\n    return;\n  const WWW_URL = { \"BASE_URL\": \"/\", \"MODE\": \"production\", \"DEV\": false, \"PROD\": true }.VITE_WWW_URL || \"https://kitcommerce.tech\";\n  let origin = WWW_URL;\n  let storeId = id;\n  if (headers && headers.get(\"cookie\") && headers.get(\"cookie\").includes(\"store\")) {\n    origin = headers.get(\"origin\") || headers.get(\"host\");\n    if (origin === \"localhost:3000\")\n      origin = \"http://localhost:3000\";\n    else\n      origin = \"https://\" + origin;\n  }\n  let uri = new URL(path, WWW_URL);\n  if (!path.includes(\"/api/\")) {\n    uri = new URL(\"api/\" + path, origin);\n  }\n  uri.searchParams.get(\"domain\");\n  uri.searchParams.get(\"store\");\n  const opts = {\n    method\n  };\n  opts.headers = headers ? headers : { Cache: \"no-cache\" };\n  if (data) {\n    data.store = storeId;\n    const contentType = (data == null ? void 0 : data.files) && ((_a = data == null ? void 0 : data.files[0]) == null ? void 0 : _a.type);\n    if (!(contentType == \"image/jpeg\" || contentType == \"image/gif\" || contentType == \"image/png\" || contentType == \"image/ico\" || contentType == \"image/webp\" || contentType == \"application/pdf\" || contentType == \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" || contentType == \"application/msword\" || contentType == \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\")) {\n      opts.headers[\"Content-Type\"] = \"application/json\";\n      opts.body = JSON.stringify(data);\n    } else {\n      const form = new FormData();\n      if (data && data.files) {\n        for (let x of data.files) {\n          form.append(\"files\", x);\n        }\n      }\n      for (let d in data) {\n        if (d !== \"files\")\n          form.append(d, data[d]);\n      }\n      opts.body = form;\n    }\n  }\n  if (token) {\n    opts.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  if (!params)\n    params = {};\n  if (params) {\n    Object.keys(params).forEach((key) => uri.searchParams.append(key, params[key]));\n  }\n  try {\n    const url = uri.toString();\n    startDelayedLoadingIndicator();\n    let response = await fetch(url, opts);\n    cancelDelayedLoadingIndicator();\n    const isJson = (_b = response.headers.get(\"content-type\")) == null ? void 0 : _b.includes(\"application/json\");\n    const res = isJson ? await response.json() : await response.text();\n    if ((res == null ? void 0 : res.status) > 399) {\n      throw { status: res.status, message: res };\n    } else if ((response == null ? void 0 : response.status) > 399) {\n      throw { status: response.status, message: res };\n    } else {\n      return res;\n    }\n  } catch (e) {\n    throw e;\n  }\n};\nconst getAPI = (path, headers) => {\n  return send({ method: \"GET\", path, headers });\n};\nconst post = (path, data, headers) => {\n  return send({ method: \"POST\", path, data, headers });\n};\nconst startDelayedLoadingIndicator = async () => {\n  clearTimeout(typingTimer);\n  typingTimer = setTimeout(() => {\n    loadingDelayed.set(true);\n  }, 5e3);\n};\nconst cancelDelayedLoadingIndicator = async () => {\n  clearTimeout(typingTimer);\n  loadingDelayed.set(false);\n};\nexport {\n  getAPI as g,\n  post as p\n};\n"],
  "mappings": "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",
  "names": []
}
